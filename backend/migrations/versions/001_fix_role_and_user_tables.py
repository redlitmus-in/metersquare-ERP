"""fix role and user tables for Meter Square ERP

Revision ID: 001
Revises: 
Create Date: 2024-01-01 00:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '001'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Create schema if it doesn't exist (for Supabase compatibility)
    op.execute('CREATE SCHEMA IF NOT EXISTS meter_square_erp')
    
    # Fix Role table issues
    # 1. Rename 'tire' column to 'tier' if it exists
    try:
        op.alter_column('role', 'tire', new_column_name='tier', schema='meter_square_erp')
    except:
        # Column might not exist or already be named 'tier'
        pass
    
    # 2. Add indexes for better performance
    op.create_index(op.f('ix_role_role'), 'role', ['role'], unique=False, schema='meter_square_erp')
    op.create_index(op.f('ix_role_title'), 'role', ['title'], unique=False, schema='meter_square_erp')
    op.create_index(op.f('ix_role_tier'), 'role', ['tier'], unique=False, schema='meter_square_erp')
    op.create_index(op.f('ix_role_is_deleted'), 'role', ['is_deleted'], unique=False, schema='meter_square_erp')
    
    # 3. Add unique constraint on role name
    op.create_unique_constraint('uq_role_role', 'role', ['role'], schema='meter_square_erp')
    
    # Fix User table issues
    # 1. Add missing org_uuid column
    op.add_column('user', sa.Column('org_uuid', sa.String(255), nullable=True), schema='meter_square_erp')
    
    # 2. Rename updated_at to last_modified_at for consistency
    try:
        op.alter_column('user', 'updated_at', new_column_name='last_modified_at', schema='meter_square_erp')
    except:
        # Column might already be named 'last_modified_at'
        pass
    
    # 3. Fix ForeignKey reference to use proper schema
    try:
        op.drop_constraint('user_role_id_fkey', 'user', type_='foreignkey', schema='meter_square_erp')
    except:
        # Constraint might not exist
        pass
    
    op.create_foreign_key('user_role_id_fkey', 'user', 'role', ['role_id'], ['role_id'], 
                         source_schema='meter_square_erp', referent_schema='meter_square_erp')
    
    # 4. Add indexes for better performance
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True, schema='meter_square_erp')
    op.create_index(op.f('ix_user_phone'), 'user', ['phone'], unique=False, schema='meter_square_erp')
    op.create_index(op.f('ix_user_role_id'), 'user', ['role_id'], unique=False, schema='meter_square_erp')
    op.create_index(op.f('ix_user_is_active'), 'user', ['is_active'], unique=False, schema='meter_square_erp')
    op.create_index(op.f('ix_user_is_deleted'), 'user', ['is_deleted'], unique=False, schema='meter_square_erp')
    op.create_index(op.f('ix_user_org_uuid'), 'user', ['org_uuid'], unique=False, schema='meter_square_erp')
    
    # 5. Add unique constraint on phone
    op.create_unique_constraint('uq_user_phone', 'user', ['phone'], schema='meter_square_erp')
    
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Revert User table changes
    op.drop_constraint('uq_user_phone', 'user', type_='unique', schema='meter_square_erp')
    op.drop_index(op.f('ix_user_org_uuid'), table_name='user', schema='meter_square_erp')
    op.drop_index(op.f('ix_user_is_deleted'), table_name='user', schema='meter_square_erp')
    op.drop_index(op.f('ix_user_is_active'), table_name='user', schema='meter_square_erp')
    op.drop_index(op.f('ix_user_role_id'), table_name='user', schema='meter_square_erp')
    op.drop_index(op.f('ix_user_phone'), table_name='user', schema='meter_square_erp')
    op.drop_index(op.f('ix_user_email'), table_name='user', schema='meter_square_erp')
    
    try:
        op.drop_constraint('user_role_id_fkey', 'user', type_='foreignkey', schema='meter_square_erp')
    except:
        pass
    
    try:
        op.alter_column('user', 'last_modified_at', new_column_name='updated_at', schema='meter_square_erp')
    except:
        pass
    
    op.drop_column('user', 'org_uuid', schema='meter_square_erp')
    
    # Revert Role table changes
    op.drop_constraint('uq_role_role', 'role', type_='unique', schema='meter_square_erp')
    op.drop_index(op.f('ix_role_is_deleted'), table_name='role', schema='meter_square_erp')
    op.drop_index(op.f('ix_role_tier'), table_name='role', schema='meter_square_erp')
    op.drop_index(op.f('ix_role_title'), table_name='role', schema='meter_square_erp')
    op.drop_index(op.f('ix_role_role'), table_name='role', schema='meter_square_erp')
    
    try:
        op.alter_column('role', 'tier', new_column_name='tire', schema='meter_square_erp')
    except:
        pass
    
    # ### end Alembic commands ### 